@model Eurobank.Models.Application.ApplicationViewModel
@using Eurobank.Helpers.Validation;
@{
    bool isLegalEntity = string.Equals(Model.ApplicationDetails.ApplicationDetails_ApplicationTypeName, "LEGAL ENTITY", StringComparison.OrdinalIgnoreCase);
    //List<ValidationResultModel> validationResults = null;
    //string sectionValidationClass = "";
    //if (ViewBag.ErrorSummaryMsgs != null)
    //{
    //    validationResults = ViewBag.ErrorSummaryMsgs;
    //    if (validationResults.Any(j => !j.IsValid))
    //    {
    //        validationResults = validationResults.Where(j => !j.IsValid).ToList();
    //    }

    //    if (validationResults != null && validationResults.Count > 0)
    //    {
    //        if (validationResults.Any(x => x.ApplicationModuleName == ApplicationModule.COUNTERPARTIES_OF_INCOMING_TRANSACTION))
    //        {
    //            sectionValidationClass = "bg-danger-row";
    //        }
    //        else
    //        {
    //            sectionValidationClass = "bg-success-row";
    //        }
    //    }
    //    else
    //    {
    //        sectionValidationClass = "bg-success-row";
    //    }
    //}
}
<style type="text/css">
    .k-grid-header .k-header > .k-link {
        margin: -0.75rem 0.0rem;
        text-overflow: initial;
    }

        .k-grid-header .k-header > .k-link > .k-icon.k-i-sort-desc-sm, .k-grid-header .k-header > .k-link > .k-icon.k-i-sort-asc-sm {
            vertical-align: text-bottom;
            margin-left: 0px;
        }

    .k-grid th, .k-grid td {
        padding: 0.75rem 0.50rem;
        text-align: center;
    }
</style>

<div class="shadow-box col-md-12">
    <div class="col-md-12">
        <ul id="accordionSourceOfIncomingTransactions">
            <li id="chartSection" class="k-state-active">
                <span class="k-link sectionValidationClass" id="Span1" style="width:auto; height:auto;">
                    @*@if(isLegalEntity)
                        {
                            @ResHelper.GetString("Eurobank.Legal.SourceOfIncomingTransactions")
                        }
                        else
                        {
                            @ResHelper.GetString("Eurobank.SourceOfIncomingTransactions")
                        }*@
                    @ResHelper.GetString("Eurobank.Legal.SourceOfIncomingTransactions")
                </span>
                <div id="accordionContentOne">

                    @(Html.Kendo().Grid<Eurobank.Models.Applications.SourceofIncommingTransactions.SourceOfIncomingTransactionsViewModel>
		()
		.Name("SourceOfIncomingTransactions")


		.Columns(columns =>
		{
							columns.Template
							(
							@"<div id='target'><i class='fa fa-ellipsis-v' style='font-size:25px'></i></div>"
							).Width(30);
			//columns.Bound(p => p.rowID).Title("ID").Width(70);
							columns.Bound(p => p.SourceOfIncomingTransactions_NameOfRemitter).HtmlAttributes(new { style = "text-align: left;" }).HeaderHtmlAttributes(new { style = "text-align:left;" }).Width(150);
							columns.Bound(p => p.SourceOfIncomingTransactions_CountryOfRemitter).HtmlAttributes(new { style = "text-align: left;" }).HeaderHtmlAttributes(new { style = "text-align:left;" }).Width(150);
							columns.Bound(p => p.SourceOfIncomingTransactions_CountryOfRemitterBank).HtmlAttributes(new { style = "text-align: left;" }).HeaderHtmlAttributes(new { style = "text-align:left;" }).Width(150);
			columns.Bound(p => p.SourceOfIncomingTransactions_Status_Name).Title(ResHelper.GetString("Eurobank.Application.General.GridHeader.RecordStatus")).Width(100);
			
		})
		.Events(e =>
		{
			e.Edit("onGridEditing");
			e.DataBound("onGridDataBoundSourceOfIncomingTransactions");
			e.Cancel("onGridCancel");

		})
		 .Events(clientEvents => clientEvents.Edit("addConfirmButton_SIT"))
		.ToolBar(toolbar => { if(Model.ApplicationDetails.IsEdit) { toolbar.Create().Text("New").IconClass("justify-content-end").HtmlAttributes(new { style = "margin-left: auto;" }); } })

		.Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("AddEditIncommingTransaction").DisplayDeleteConfirmation(false).Window(w=> w.Title(ResHelper.GetString(isLegalEntity ? "Eurobank.Legal.SourceOfIncomingTransactions" : "Eurobank.SourceOfIncomingTransactions")).Width(800))).EnableCustomBinding(true)
		.Pageable()
		.Sortable()
		.Scrollable()

		.HtmlAttributes(new { style = "max-height:550px;" })
		.DataSource(dataSource => dataSource
		.Ajax()
		.PageSize(10)
		.Sort(x => x.Add("SourceOfIncomingTransactions_Status_Name").Descending())
		//.Events(e => e.RequestStart("hideIdField"))
		.Model(model =>
		{

			model.Id(p => p.SourceOfIncomingTransactionsID);
			model.Field(p => p.SourceOfIncomingTransactions_NameOfRemitter);
			model.Field(p => p.SourceOfIncomingTransactions_CountryOfRemitterBankName);
			model.Field(p => p.SourceOfIncomingTransactions_CountryOfRemitterName);
			model.Field(p => p.SourceOfIncomingTransactions_CountryOfRemitter);
			model.Field(p => p.SourceOfIncomingTransactions_CountryOfRemitterBank);
			model.Field(p => p.nodePath);
		})
		//.Model(model => model.Id(p => p.AddressGuid))
		.Events(events => events.Error("error_handlerSourceOfIncomingTransactions"))

		.ServerOperation(true)
		.Create(update => update.Action("IncommingTransactionPopup_Create", "Applications",new { id=Model.Id}))
		.Read(read => read.Action("IncommingTransaction_Read", "Applications", new { id = Model.Id }))
		.Update(update => update.Action("IncommingTransactionPopup_Update", "Applications"))
		.Destroy(update => update.Action("IncommingTransactionPopup_Destroy", "Applications"))

		//.Events(events => events.RequestEnd("onRequestEnd"))
		)
		)

                </div>
            </li>
        </ul>
    </div>
</div>
<ul id="context-menuSourceOfIncomingTransactions">
    @if (Model.ApplicationDetails.IsEdit)
    {
		<li id="editRowSOI">Edit/View &nbsp;&nbsp;&nbsp;&nbsp;<span class="k-icon k-i-pencil"></span></li>
        <li id="removeRow" class="">Delete&nbsp;&nbsp;&nbsp;&nbsp;<span class="">X</span></li>
    }
    else
    {
        <li id="editRowSOI">View &nbsp;&nbsp;&nbsp;&nbsp;<span class="k-icon k-i-preview"></span></li>
    }
</ul>
<script src="~/Scripts/Custom/Application/SourceOfIncomingTransaction.js"></script>


