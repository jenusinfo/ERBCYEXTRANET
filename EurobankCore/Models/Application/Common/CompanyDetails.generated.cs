//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Eurobank;

[assembly: RegisterDocumentType(CompanyDetails.CLASS_NAME, typeof(CompanyDetails))]

namespace CMS.DocumentEngine.Types.Eurobank
{
	/// <summary>
	/// Represents a content item of type CompanyDetails.
	/// </summary>
	public partial class CompanyDetails : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Eurobank.CompanyDetails";


		/// <summary>
		/// The instance of the class that provides extended API for working with CompanyDetails fields.
		/// </summary>
		private readonly CompanyDetailsFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// CompanyDetailsID.
		/// </summary>
		[DatabaseIDField]
		public int CompanyDetailsID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("CompanyDetailsID"), 0);
			}
			set
			{
				SetValue("CompanyDetailsID", value);
			}
		}


		/// <summary>
		/// CustomerCIF.
		/// </summary>
		[DatabaseField]
		public string CustomerCIF
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CustomerCIF"), @"");
			}
			set
			{
				SetValue("CustomerCIF", value);
			}
		}


		/// <summary>
		/// Application Type.
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_Type
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_Type"), @"");
			}
			set
			{
				SetValue("CompanyDetails_Type", value);
			}
		}


		/// <summary>
		/// Invited.
		/// </summary>
		[DatabaseField]
		public int CompanyDetails_Invited
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("CompanyDetails_Invited"), 0);
			}
			set
			{
				SetValue("CompanyDetails_Invited", value);
			}
		}


		/// <summary>
		/// Registry Id.
		/// </summary>
		[DatabaseField]
		public int PersonsRegistryID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("PersonsRegistryID"), 0);
			}
			set
			{
				SetValue("PersonsRegistryID", value);
			}
		}


		/// <summary>
		/// IdVerified.
		/// </summary>
		[DatabaseField]
		public bool CompanyDetails_IdVerified
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("CompanyDetails_IdVerified"), false);
			}
			set
			{
				SetValue("CompanyDetails_IdVerified", value);
			}
		}


		/// <summary>
		/// Does the Applicant maintain Bank Account(s) with another Banking Institution?.
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_HasAccountInOtherBank
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_HasAccountInOtherBank"), @"");
			}
			set
			{
				SetValue("CompanyDetails_HasAccountInOtherBank", value);
			}
		}


		/// <summary>
		/// Name of Banking Institution.
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_NameOfBankingInstitution
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_NameOfBankingInstitution"), @"");
			}
			set
			{
				SetValue("CompanyDetails_NameOfBankingInstitution", value);
			}
		}


		/// <summary>
		/// Country of Banking Institution.
		/// </summary>
		[DatabaseField]
		public int CompanyDetails_CountryOfBankingInstitution
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("CompanyDetails_CountryOfBankingInstitution"), 0);
			}
			set
			{
				SetValue("CompanyDetails_CountryOfBankingInstitution", value);
			}
		}


		/// <summary>
		/// Registered Name.
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_RegisteredName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_RegisteredName"), @"");
			}
			set
			{
				SetValue("CompanyDetails_RegisteredName", value);
			}
		}


		/// <summary>
		/// Trading Name.
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_TradingName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_TradingName"), @"");
			}
			set
			{
				SetValue("CompanyDetails_TradingName", value);
			}
		}


		/// <summary>
		/// Based on Entity Type, this field should be visible and mandatory as well. There are types that this field should not be visible. Only one value is allowed to be selected . If the selected value at field “SECTOR” is Public Limited Company or Public Insurance Company then field “Listing Status” should be mandatory for completion          .
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_EntityType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_EntityType"), @"");
			}
			set
			{
				SetValue("CompanyDetails_EntityType", value);
			}
		}


		/// <summary>
		/// 1. Country of Incorporation should be the same as the Country of type Registered Address. If there is a mismatch then an error message should  should be generated.
		/// 2. If the selected value at fields "Tax Country” and “Country of Incorporation”differ then a warning message should be generated
		/// .
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_CountryofIncorporation
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_CountryofIncorporation"), @"");
			}
			set
			{
				SetValue("CompanyDetails_CountryofIncorporation", value);
			}
		}


		/// <summary>
		/// Registration Number .
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_RegistrationNumber
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_RegistrationNumber"), @"");
			}
			set
			{
				SetValue("CompanyDetails_RegistrationNumber", value);
			}
		}


		/// <summary>
		/// Date of Incorporation.
		/// </summary>
		[DatabaseField]
		public DateTime CompanyDetails_DateofIncorporation
		{
			get
			{
				return ValidationHelper.GetDateTime(GetValue("CompanyDetails_DateofIncorporation"), DateTimeHelper.ZERO_TIME);
			}
			set
			{
				SetValue("CompanyDetails_DateofIncorporation", value);
			}
		}


		/// <summary>
		/// Based on Entity Type, this field should be visible and mandatory as well. There are types that this field should not be visible. Only one value is allowed to be selected .
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_ListingStatus
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_ListingStatus"), @"");
			}
			set
			{
				SetValue("CompanyDetails_ListingStatus", value);
			}
		}


		/// <summary>
		/// Corporation shares  issued to the bearer.
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_CorporationSharesIssuedToTheBearer
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_CorporationSharesIssuedToTheBearer"), @"");
			}
			set
			{
				SetValue("CompanyDetails_CorporationSharesIssuedToTheBearer", value);
			}
		}


		/// <summary>
		/// Is the Entity located and operates an office in Cyprus?.
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_IstheEntitylocatedandoperatesanofficeinCyprus
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_IstheEntitylocatedandoperatesanofficeinCyprus"), @"");
			}
			set
			{
				SetValue("CompanyDetails_IstheEntitylocatedandoperatesanofficeinCyprus", value);
			}
		}


		/// <summary>
		/// Status.
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_Status
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_Status"), @"");
			}
			set
			{
				SetValue("CompanyDetails_Status", value);
			}
		}


		/// <summary>
		/// Is the applicant liable to pay defense tax in Cyprus? .
		/// </summary>
		[DatabaseField]
		public string CompanyDetails_IsLiableToPayDefenseTaxInCyprus
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CompanyDetails_IsLiableToPayDefenseTaxInCyprus"), @"");
			}
			set
			{
				SetValue("CompanyDetails_IsLiableToPayDefenseTaxInCyprus", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with CompanyDetails fields.
		/// </summary>
		[RegisterProperty]
		public CompanyDetailsFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with CompanyDetails fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class CompanyDetailsFields : AbstractHierarchicalObject<CompanyDetailsFields>
		{
			/// <summary>
			/// The content item of type CompanyDetails that is a target of the extended API.
			/// </summary>
			private readonly CompanyDetails mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="CompanyDetailsFields" /> class with the specified content item of type CompanyDetails.
			/// </summary>
			/// <param name="instance">The content item of type CompanyDetails that is a target of the extended API.</param>
			public CompanyDetailsFields(CompanyDetails instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// CompanyDetailsID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.CompanyDetailsID;
				}
				set
				{
					mInstance.CompanyDetailsID = value;
				}
			}


			/// <summary>
			/// CustomerCIF.
			/// </summary>
			public string CustomerCIF
			{
				get
				{
					return mInstance.CustomerCIF;
				}
				set
				{
					mInstance.CustomerCIF = value;
				}
			}


			/// <summary>
			/// Application Type.
			/// </summary>
			public string _Type
			{
				get
				{
					return mInstance.CompanyDetails_Type;
				}
				set
				{
					mInstance.CompanyDetails_Type = value;
				}
			}


			/// <summary>
			/// Invited.
			/// </summary>
			public int _Invited
			{
				get
				{
					return mInstance.CompanyDetails_Invited;
				}
				set
				{
					mInstance.CompanyDetails_Invited = value;
				}
			}


			/// <summary>
			/// Registry Id.
			/// </summary>
			public int PersonsRegistryID
			{
				get
				{
					return mInstance.PersonsRegistryID;
				}
				set
				{
					mInstance.PersonsRegistryID = value;
				}
			}


			/// <summary>
			/// IdVerified.
			/// </summary>
			public bool _IdVerified
			{
				get
				{
					return mInstance.CompanyDetails_IdVerified;
				}
				set
				{
					mInstance.CompanyDetails_IdVerified = value;
				}
			}


			/// <summary>
			/// Does the Applicant maintain Bank Account(s) with another Banking Institution?.
			/// </summary>
			public string _HasAccountInOtherBank
			{
				get
				{
					return mInstance.CompanyDetails_HasAccountInOtherBank;
				}
				set
				{
					mInstance.CompanyDetails_HasAccountInOtherBank = value;
				}
			}


			/// <summary>
			/// Name of Banking Institution.
			/// </summary>
			public string _NameOfBankingInstitution
			{
				get
				{
					return mInstance.CompanyDetails_NameOfBankingInstitution;
				}
				set
				{
					mInstance.CompanyDetails_NameOfBankingInstitution = value;
				}
			}


			/// <summary>
			/// Country of Banking Institution.
			/// </summary>
			public int _CountryOfBankingInstitution
			{
				get
				{
					return mInstance.CompanyDetails_CountryOfBankingInstitution;
				}
				set
				{
					mInstance.CompanyDetails_CountryOfBankingInstitution = value;
				}
			}


			/// <summary>
			/// Registered Name.
			/// </summary>
			public string _RegisteredName
			{
				get
				{
					return mInstance.CompanyDetails_RegisteredName;
				}
				set
				{
					mInstance.CompanyDetails_RegisteredName = value;
				}
			}


			/// <summary>
			/// Trading Name.
			/// </summary>
			public string _TradingName
			{
				get
				{
					return mInstance.CompanyDetails_TradingName;
				}
				set
				{
					mInstance.CompanyDetails_TradingName = value;
				}
			}


			/// <summary>
			/// Based on Entity Type, this field should be visible and mandatory as well. There are types that this field should not be visible. Only one value is allowed to be selected . If the selected value at field “SECTOR” is Public Limited Company or Public Insurance Company then field “Listing Status” should be mandatory for completion          .
			/// </summary>
			public string _EntityType
			{
				get
				{
					return mInstance.CompanyDetails_EntityType;
				}
				set
				{
					mInstance.CompanyDetails_EntityType = value;
				}
			}


			/// <summary>
			/// 1. Country of Incorporation should be the same as the Country of type Registered Address. If there is a mismatch then an error message should  should be generated.
			/// 2. If the selected value at fields "Tax Country” and “Country of Incorporation”differ then a warning message should be generated
			/// .
			/// </summary>
			public string _CountryofIncorporation
			{
				get
				{
					return mInstance.CompanyDetails_CountryofIncorporation;
				}
				set
				{
					mInstance.CompanyDetails_CountryofIncorporation = value;
				}
			}


			/// <summary>
			/// Registration Number .
			/// </summary>
			public string _RegistrationNumber
			{
				get
				{
					return mInstance.CompanyDetails_RegistrationNumber;
				}
				set
				{
					mInstance.CompanyDetails_RegistrationNumber = value;
				}
			}


			/// <summary>
			/// Date of Incorporation.
			/// </summary>
			public DateTime _DateofIncorporation
			{
				get
				{
					return mInstance.CompanyDetails_DateofIncorporation;
				}
				set
				{
					mInstance.CompanyDetails_DateofIncorporation = value;
				}
			}


			/// <summary>
			/// Based on Entity Type, this field should be visible and mandatory as well. There are types that this field should not be visible. Only one value is allowed to be selected .
			/// </summary>
			public string _ListingStatus
			{
				get
				{
					return mInstance.CompanyDetails_ListingStatus;
				}
				set
				{
					mInstance.CompanyDetails_ListingStatus = value;
				}
			}


			/// <summary>
			/// Corporation shares  issued to the bearer.
			/// </summary>
			public string _CorporationSharesIssuedToTheBearer
			{
				get
				{
					return mInstance.CompanyDetails_CorporationSharesIssuedToTheBearer;
				}
				set
				{
					mInstance.CompanyDetails_CorporationSharesIssuedToTheBearer = value;
				}
			}


			/// <summary>
			/// Is the Entity located and operates an office in Cyprus?.
			/// </summary>
			public string _IstheEntitylocatedandoperatesanofficeinCyprus
			{
				get
				{
					return mInstance.CompanyDetails_IstheEntitylocatedandoperatesanofficeinCyprus;
				}
				set
				{
					mInstance.CompanyDetails_IstheEntitylocatedandoperatesanofficeinCyprus = value;
				}
			}


			/// <summary>
			/// Status.
			/// </summary>
			public string _Status
			{
				get
				{
					return mInstance.CompanyDetails_Status;
				}
				set
				{
					mInstance.CompanyDetails_Status = value;
				}
			}


			/// <summary>
			/// Is the applicant liable to pay defense tax in Cyprus? .
			/// </summary>
			public string _IsLiableToPayDefenseTaxInCyprus
			{
				get
				{
					return mInstance.CompanyDetails_IsLiableToPayDefenseTaxInCyprus;
				}
				set
				{
					mInstance.CompanyDetails_IsLiableToPayDefenseTaxInCyprus = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="CompanyDetails" /> class.
		/// </summary>
		public CompanyDetails() : base(CLASS_NAME)
		{
			mFields = new CompanyDetailsFields(this);
		}

		#endregion
	}
}