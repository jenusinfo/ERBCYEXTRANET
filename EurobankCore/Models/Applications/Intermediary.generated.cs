//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Eurobank;

[assembly: RegisterDocumentType(Intermediary.CLASS_NAME, typeof(Intermediary))]

namespace CMS.DocumentEngine.Types.Eurobank
{
    /// <summary>
    /// Represents a content item of type Intermediary.
    /// </summary>
    public partial class Intermediary : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "Eurobank.Intermediary";


        /// <summary>
        /// The instance of the class that provides extended API for working with Intermediary fields.
        /// </summary>
        private readonly IntermediaryFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// IntermediaryID.
        /// </summary>
        [DatabaseIDField]
        public int IntermediaryID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("IntermediaryID"), 0);
            }
            set
            {
                SetValue("IntermediaryID", value);
            }
        }
        [DatabaseField]
        public bool IsLegalOnly
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("IsLegalOnly"), false);
            }
            set
            {
                SetValue("IsLegalOnly", value);
            }
        }

        /// <summary>
        /// Name.
        /// </summary>
        [DatabaseField]
        public string IntermediaryName
        {
            get
            {
                return ValidationHelper.GetString(GetValue("IntermediaryName"), @"");
            }
            set
            {
                SetValue("IntermediaryName", value);
            }
        }


        /// <summary>
        /// Registration Number.
        /// </summary>
        [DatabaseField]
        public string RegistrationNumber
        {
            get
            {
                return ValidationHelper.GetString(GetValue("RegistrationNumber"), @"");
            }
            set
            {
                SetValue("RegistrationNumber", value);
            }
        }


        /// <summary>
        /// Bank CIF Number.
        /// </summary>
        [DatabaseField]
        public string BankCIFNumber
        {
            get
            {
                return ValidationHelper.GetString(GetValue("BankCIFNumber"), @"");
            }
            set
            {
                SetValue("BankCIFNumber", value);
            }
        }


        /// <summary>
        /// Email.
        /// </summary>
        [DatabaseField]
        public string Email
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Email"), @"");
            }
            set
            {
                SetValue("Email", value);
            }
        }


        /// <summary>
        /// Contact Person.
        /// </summary>
        [DatabaseField]
        public Guid ContactPerson
        {
            get
            {
                return ValidationHelper.GetGuid(GetValue("ContactPerson"), Guid.Empty);
            }
            set
            {
                SetValue("ContactPerson", value);
            }
        }


        /// <summary>
        /// Maker/Checker.
        /// </summary>
        [DatabaseField]
        public bool MakerChecker
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("MakerChecker"), false);
            }
            set
            {
                SetValue("MakerChecker", value);
            }
        }


        /// <summary>
        /// Default Bank Unit.
        /// </summary>
        [DatabaseField]
        public Guid DefaultBankUnit
        {
            get
            {
                return ValidationHelper.GetGuid(GetValue("DefaultBankUnit"), Guid.Empty);
            }
            set
            {
                SetValue("DefaultBankUnit", value);
            }
        }


        /// <summary>
        /// Responsible Bank Officer.
        /// </summary>
        [DatabaseField]
        public Guid ResponsibleBankOfficer
        {
            get
            {
                return ValidationHelper.GetGuid(GetValue("ResponsibleBankOfficer"), Guid.Empty);
            }
            set
            {
                SetValue("ResponsibleBankOfficer", value);
            }
        }


        /// <summary>
        /// Address.
        /// </summary>
        [DatabaseField]
        public string Address
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Address"), @"");
            }
            set
            {
                SetValue("Address", value);
            }
        }


        /// <summary>
        /// PO Box.
        /// </summary>
        [DatabaseField]
        public string POBox
        {
            get
            {
                return ValidationHelper.GetString(GetValue("POBox"), @"");
            }
            set
            {
                SetValue("POBox", value);
            }
        }


        /// <summary>
        /// Telephone.
        /// </summary>
        [DatabaseField]
        public string Telephone
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Telephone"), @"");
            }
            set
            {
                SetValue("Telephone", value);
            }
        }


        /// <summary>
        ///  Fax.
        /// </summary>
        [DatabaseField]
        public string Fax
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Fax"), @"");
            }
            set
            {
                SetValue("Fax", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with Intermediary fields.
        /// </summary>
        [RegisterProperty]
        public IntermediaryFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with Intermediary fields.
        /// </summary>
        [RegisterAllProperties]
        public partial class IntermediaryFields : AbstractHierarchicalObject<IntermediaryFields>
        {
            /// <summary>
            /// The content item of type Intermediary that is a target of the extended API.
            /// </summary>
            private readonly Intermediary mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="IntermediaryFields" /> class with the specified content item of type Intermediary.
            /// </summary>
            /// <param name="instance">The content item of type Intermediary that is a target of the extended API.</param>
            public IntermediaryFields(Intermediary instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// IntermediaryID.
            /// </summary>
            public int ID
            {
                get
                {
                    return mInstance.IntermediaryID;
                }
                set
                {
                    mInstance.IntermediaryID = value;
                }
            }


            /// <summary>
            /// Name.
            /// </summary>
            public string Name
            {
                get
                {
                    return mInstance.IntermediaryName;
                }
                set
                {
                    mInstance.IntermediaryName = value;
                }
            }


            /// <summary>
            /// Registration Number.
            /// </summary>
            public string RegistrationNumber
            {
                get
                {
                    return mInstance.RegistrationNumber;
                }
                set
                {
                    mInstance.RegistrationNumber = value;
                }
            }


            /// <summary>
            /// Bank CIF Number.
            /// </summary>
            public string BankCIFNumber
            {
                get
                {
                    return mInstance.BankCIFNumber;
                }
                set
                {
                    mInstance.BankCIFNumber = value;
                }
            }


            /// <summary>
            /// Email.
            /// </summary>
            public string Email
            {
                get
                {
                    return mInstance.Email;
                }
                set
                {
                    mInstance.Email = value;
                }
            }


            /// <summary>
            /// Contact Person.
            /// </summary>
            public Guid ContactPerson
            {
                get
                {
                    return mInstance.ContactPerson;
                }
                set
                {
                    mInstance.ContactPerson = value;
                }
            }


            /// <summary>
            /// Maker/Checker.
            /// </summary>
            public bool MakerChecker
            {
                get
                {
                    return mInstance.MakerChecker;
                }
                set
                {
                    mInstance.MakerChecker = value;
                }
            }


            /// <summary>
            /// Default Bank Unit.
            /// </summary>
            public Guid DefaultBankUnit
            {
                get
                {
                    return mInstance.DefaultBankUnit;
                }
                set
                {
                    mInstance.DefaultBankUnit = value;
                }
            }


            /// <summary>
            /// Responsible Bank Officer.
            /// </summary>
            public Guid ResponsibleBankOfficer
            {
                get
                {
                    return mInstance.ResponsibleBankOfficer;
                }
                set
                {
                    mInstance.ResponsibleBankOfficer = value;
                }
            }


            /// <summary>
            /// Address.
            /// </summary>
            public string Address
            {
                get
                {
                    return mInstance.Address;
                }
                set
                {
                    mInstance.Address = value;
                }
            }


            /// <summary>
            /// PO Box.
            /// </summary>
            public string POBox
            {
                get
                {
                    return mInstance.POBox;
                }
                set
                {
                    mInstance.POBox = value;
                }
            }


            /// <summary>
            /// Telephone.
            /// </summary>
            public string Telephone
            {
                get
                {
                    return mInstance.Telephone;
                }
                set
                {
                    mInstance.Telephone = value;
                }
            }


            /// <summary>
            ///  Fax.
            /// </summary>
            public string Fax
            {
                get
                {
                    return mInstance.Fax;
                }
                set
                {
                    mInstance.Fax = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="Intermediary" /> class.
        /// </summary>
        public Intermediary() : base(CLASS_NAME)
        {
            mFields = new IntermediaryFields(this);
        }

        #endregion
    }
}