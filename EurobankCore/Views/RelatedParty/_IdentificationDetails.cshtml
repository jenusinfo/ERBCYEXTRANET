@*@model Eurobank.Models.Application.Applicant.ApplicantModel*@
@model Eurobank.Models.Application.RelatedParty.RelatedPartyModel
@using Eurobank.Helpers.Validation;
@{
    bool isUBO = false;
    string ApplicationTypeName = string.Empty;
    if (Model != null && Model.PersonalDetails != null)
    {
        isUBO = Model.PersonalDetails.IsRelatedPartyUBO;
        ApplicationTypeName = Model.ApplicationTypeName;
    }
    //List<ValidationResultModel> validationResults = null;
    //string sectionValidationClass = "";
    //if (ViewBag.ErrorSummaryMsgs != null)
    //{
    //    validationResults = ViewBag.ErrorSummaryMsgs;
    //    if (validationResults.Any(j => !j.IsValid))
    //    {
    //        validationResults = validationResults.Where(j => !j.IsValid).ToList();
    //    }

    //    if (validationResults != null && validationResults.Count > 0)
    //    {
    //        if (validationResults.Any(x => x.ApplicationModuleName == ApplicationModule.IDENTIFICATION))
    //        {
    //            sectionValidationClass = "bg-danger-row";
    //        }
    //        else
    //        {
    //            sectionValidationClass = "bg-success-row";
    //        }
    //    }
    //    else
    //    {
    //        sectionValidationClass = "bg-success-row";
    //    }
    //}
}
<div class="shadow-box col-md-12">
    <div class="col-md-12">
        <ul id="accordionIdentificationDetails">
            <li id="chartSection" class="k-state-active">
                <span class="k-link sectionValidationClass" id="Span1" style="width:auto; height:auto;">
                    @ResHelper.GetString("Eurobank.Identification")
                </span>
                <div id="accordionIdentificationContentOne">

                    @(Html.Kendo().Grid<Eurobank.Models.IdentificationDetails.IdentificationDetailsViewModel>
            ()
            .Name("IdentificationDetails")
            .Columns(columns =>
            {
                            columns.Template
                            (
                            @"<div id='target'><i class='fa fa-ellipsis-v' style='font-size:25px'></i></div>"
                            ).Width(30);
                            columns.Bound(p => p.IdentificationDetails_CitizenshipName).Width(150);
                            columns.Bound(p => p.IdentificationDetails_TypeOfIdentificationName).Width(150);
                            columns.Bound(p => p.IdentificationDetails_IdentificationNumber).Width(150);
                columns.Bound(p => p.IdentificationDetails_IssueDate).ClientTemplate("#= (IdentificationDetails_IssueDate == null) ? ' ' :kendo.toString(IdentificationDetails_IssueDate, \"dd/MM/yyyy \") #").Width(120);
                columns.Bound(p => p.IdentificationDetails_ExpiryDate).ClientTemplate("#= (IdentificationDetails_ExpiryDate == null) ? ' ' :kendo.toString(IdentificationDetails_ExpiryDate, \"dd/MM/yyyy \") #").Width(120);
                columns.Bound(p => p.StatusName).Title(ResHelper.GetString("Eurobank.Application.General.GridHeader.RecordStatus")).Width(100);
                

            })
            .Events(e =>
            {
                e.Edit("addConfirmButton_IdentificationDetails");
                e.DataBound("onIdentificationDataBound");
                e.Cancel("onGridCancel");
            })
            .ToolBar(toolbar => { if(Model.IsEdit) { toolbar.Create().Text("New").IconClass("justify-content-end").HtmlAttributes(new { style = "margin-left: auto;",id= "IdentificationDetailsNew" }); } })

            .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("AddEditIdentificationDetails").DisplayDeleteConfirmation(false).Window(w => w.Title("Identification").Width(800).Height(950))).EnableCustomBinding(true)
            .Pageable()
            .Sortable()
            .Scrollable()

            .HtmlAttributes(new { style = "max-height:550px;" })
            .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Sort(x => x.Add("StatusName").Descending())
            //.Events(e => e.RequestStart("onEdit"))
            .Model(model =>
            {

                model.Id(p => p.IdentificationDetailsID);
                model.Field(p => p.IdentificationDetails_Citizenship);
                model.Field(p => p.IdentificationDetails_CountryOfIssue);
                model.Field(p => p.IdentificationDetails_ExpiryDate);
                model.Field(p => p.IdentificationDetails_IdentificationNumber);
                model.Field(p => p.IdentificationDetails_IssueDate);
                model.Field(p => p.IdentificationDetails_TypeOfIdentification);
                model.Field(p => p.PnodeGUID);
            })

            //.Model(model => model.Id(p => p.AddressGuid))
            .Events(events => events.Error("error_handleridentificationDetails"))
            .ServerOperation(true)
                        .Create(update => update.Action("IdentificationPopup_Create", "Identifications", new { pNodeAliaspath = Model.NodePath, nodeGUID = Model.NodeGUID, applicationType = Model.ApplicationTypeName, ApplicantId = Model.PersonalDetails.Id }))
                        .Read(read => read.Action("Identification_Read", "Identifications", new { pNodeAliaspath = Model.NodePath }))
                        .Update(update => update.Action("IdentificationPopup_Update", "Identifications", new { applicationType = Model.ApplicationTypeName, ApplicantId = Model.PersonalDetails.Id }))
                        .Destroy(update => update.Action("IdentificationPopup_Destroy", "Identifications"))
            )
			)
                </div>
            </li>
        </ul>
    </div>
</div>
@Html.Hidden("hdnApplication_RelatedParty_LeftMenu_IdentificationDetails", ResHelper.GetString("Eurobank.Application.Applicant.LeftMenu.IdentificationDetails"))
@Html.Hidden("ApplicationTypeName",ApplicationTypeName)
@Html.Hidden("ValidateIdentificationDatesUrl",Url.Action("ValidateIdentificationDates", "Identifications"))
@Html.Hidden("Type",Model.Type)
<ul id="context-menuIdentificationDetails">
    @if (Model.IsEdit)
    {
        <li id="editRowIden">Edit/View &nbsp;&nbsp;&nbsp;&nbsp;<span class="k-icon k-i-pencil"></span></li>
        <li id="removeRow" class="">Delete&nbsp;&nbsp;&nbsp;&nbsp;<span class="">X</span></li>
    }
    else
    {
        <li id="editRowIden">View &nbsp;&nbsp;&nbsp;&nbsp;<span class="k-icon k-i-preview"></span></li>
    }
</ul>
<script src="~/Scripts/Custom/RelatedParty/RelatedParty_Identifications.js"></script>

