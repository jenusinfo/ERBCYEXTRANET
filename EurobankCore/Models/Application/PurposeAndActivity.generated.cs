//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Eurobank;

[assembly: RegisterDocumentType(PurposeAndActivity.CLASS_NAME, typeof(PurposeAndActivity))]

namespace CMS.DocumentEngine.Types.Eurobank
{
	/// <summary>
	/// Represents a content item of type PurposeAndActivity.
	/// </summary>
	public partial class PurposeAndActivity : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Eurobank.PurposeAndActivity";


		/// <summary>
		/// The instance of the class that provides extended API for working with PurposeAndActivity fields.
		/// </summary>
		private readonly PurposeAndActivityFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// PurposeAndActivityID.
		/// </summary>
		[DatabaseIDField]
		public int PurposeAndActivityID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("PurposeAndActivityID"), 0);
			}
			set
			{
				SetValue("PurposeAndActivityID", value);
			}
		}


		/// <summary>
		/// Reason for opening the account.
		/// </summary>
		[DatabaseField]
		public string PurposeAndActivity_ReasonForOpeningTheAccount
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PurposeAndActivity_ReasonForOpeningTheAccount"), @"");
			}
			set
			{
				SetValue("PurposeAndActivity_ReasonForOpeningTheAccount", value);
			}
		}


		/// <summary>
		/// Expected Nature of Incoming and Outgoing Transactions.
		/// </summary>
		[DatabaseField]
		public string PurposeAndActivity_ExpectedNatureOfIncomingAndOutgoingTransactions
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PurposeAndActivity_ExpectedNatureOfIncomingAndOutgoingTransactions"), @"");
			}
			set
			{
				SetValue("PurposeAndActivity_ExpectedNatureOfIncomingAndOutgoingTransactions", value);
			}
		}


		/// <summary>
		/// Expected Frequency of Incoming and Outgoing Transactions.
		/// </summary>
		[DatabaseField]
		public string PurposeAndActivity_ExpectedFrequencyOfIncomingAndOutgoingTransactions
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PurposeAndActivity_ExpectedFrequencyOfIncomingAndOutgoingTransactions"), @"");
			}
			set
			{
				SetValue("PurposeAndActivity_ExpectedFrequencyOfIncomingAndOutgoingTransactions", value);
			}
		}


		/// <summary>
		/// Expected Incoming Amount (€) .
		/// </summary>
		[DatabaseField]
		public string PurposeAndActivity_ExpectedIncomingAmount
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PurposeAndActivity_ExpectedIncomingAmount"), @"");
			}
			set
			{
				SetValue("PurposeAndActivity_ExpectedIncomingAmount", value);
			}
		}


		/// <summary>
		/// Signature Mandate Type.
		/// </summary>
		[DatabaseField]
		public string PurposeAndActivity_SignatureMandateType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PurposeAndActivity_SignatureMandateType"), @"");
			}
			set
			{
				SetValue("PurposeAndActivity_SignatureMandateType", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with PurposeAndActivity fields.
		/// </summary>
		[RegisterProperty]
		public PurposeAndActivityFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with PurposeAndActivity fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class PurposeAndActivityFields : AbstractHierarchicalObject<PurposeAndActivityFields>
		{
			/// <summary>
			/// The content item of type PurposeAndActivity that is a target of the extended API.
			/// </summary>
			private readonly PurposeAndActivity mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="PurposeAndActivityFields" /> class with the specified content item of type PurposeAndActivity.
			/// </summary>
			/// <param name="instance">The content item of type PurposeAndActivity that is a target of the extended API.</param>
			public PurposeAndActivityFields(PurposeAndActivity instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// PurposeAndActivityID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.PurposeAndActivityID;
				}
				set
				{
					mInstance.PurposeAndActivityID = value;
				}
			}


			/// <summary>
			/// Reason for opening the account.
			/// </summary>
			public string _ReasonForOpeningTheAccount
			{
				get
				{
					return mInstance.PurposeAndActivity_ReasonForOpeningTheAccount;
				}
				set
				{
					mInstance.PurposeAndActivity_ReasonForOpeningTheAccount = value;
				}
			}


			/// <summary>
			/// Expected Nature of Incoming and Outgoing Transactions.
			/// </summary>
			public string _ExpectedNatureOfIncomingAndOutgoingTransactions
			{
				get
				{
					return mInstance.PurposeAndActivity_ExpectedNatureOfIncomingAndOutgoingTransactions;
				}
				set
				{
					mInstance.PurposeAndActivity_ExpectedNatureOfIncomingAndOutgoingTransactions = value;
				}
			}


			/// <summary>
			/// Expected Frequency of Incoming and Outgoing Transactions.
			/// </summary>
			public string _ExpectedFrequencyOfIncomingAndOutgoingTransactions
			{
				get
				{
					return mInstance.PurposeAndActivity_ExpectedFrequencyOfIncomingAndOutgoingTransactions;
				}
				set
				{
					mInstance.PurposeAndActivity_ExpectedFrequencyOfIncomingAndOutgoingTransactions = value;
				}
			}


			/// <summary>
			/// Expected Incoming Amount (€) .
			/// </summary>
			public string _ExpectedIncomingAmount
			{
				get
				{
					return mInstance.PurposeAndActivity_ExpectedIncomingAmount;
				}
				set
				{
					mInstance.PurposeAndActivity_ExpectedIncomingAmount = value;
				}
			}


			/// <summary>
			/// Signature Mandate Type.
			/// </summary>
			public string _SignatureMandateType
			{
				get
				{
					return mInstance.PurposeAndActivity_SignatureMandateType;
				}
				set
				{
					mInstance.PurposeAndActivity_SignatureMandateType = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="PurposeAndActivity" /> class.
		/// </summary>
		public PurposeAndActivity() : base(CLASS_NAME)
		{
			mFields = new PurposeAndActivityFields(this);
		}

		#endregion
	}
}