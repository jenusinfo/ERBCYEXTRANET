//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Eurobank;

[assembly: RegisterDocumentType(SignatoryGroup.CLASS_NAME, typeof(SignatoryGroup))]

namespace CMS.DocumentEngine.Types.Eurobank
{
	/// <summary>
	/// Represents a content item of type SignatoryGroup.
	/// </summary>
	public partial class SignatoryGroup : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Eurobank.SignatoryGroup";


		/// <summary>
		/// The instance of the class that provides extended API for working with SignatoryGroup fields.
		/// </summary>
		private readonly SignatoryGroupFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// SignatoryGroupID.
		/// </summary>
		[DatabaseIDField]
		public int SignatoryGroupID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("SignatoryGroupID"), 0);
			}
			set
			{
				SetValue("SignatoryGroupID", value);
			}
		}


		/// <summary>
		/// Signatory Group Name.
		/// </summary>
		[DatabaseField]
		public string SignatoryGroupName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("SignatoryGroupName"), @"");
			}
			set
			{
				SetValue("SignatoryGroupName", value);
			}
		}


		/// <summary>
		/// Signatory Persons.
		/// </summary>
		[DatabaseField]
		public string SignatoryPersons
		{
			get
			{
				return ValidationHelper.GetString(GetValue("SignatoryPersons"), @"");
			}
			set
			{
				SetValue("SignatoryPersons", value);
			}
		}


		/// <summary>
		/// Signature Rights.
		/// </summary>
		[DatabaseField]
		public string SignatureRights
		{
			get
			{
				return ValidationHelper.GetString(GetValue("SignatureRights"), @"");
			}
			set
			{
				SetValue("SignatureRights", value);
			}
		}


		/// <summary>
		/// Start Date.
		/// </summary>
		[DatabaseField]
		public DateTime StartDate
		{
			get
			{
				return ValidationHelper.GetDateTime(GetValue("StartDate"), DateTimeHelper.ZERO_TIME);
			}
			set
			{
				SetValue("StartDate", value);
			}
		}


		/// <summary>
		/// End Date.
		/// </summary>
		[DatabaseField]
		public DateTime EndDate
		{
			get
			{
				return ValidationHelper.GetDateTime(GetValue("EndDate"), DateTimeHelper.ZERO_TIME);
			}
			set
			{
				SetValue("EndDate", value);
			}
		}


		/// <summary>
		/// Is Confirmed.
		/// </summary>
		[DatabaseField]
		public bool Status
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Status"), false);
			}
			set
			{
				SetValue("Status", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with SignatoryGroup fields.
		/// </summary>
		[RegisterProperty]
		public SignatoryGroupFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with SignatoryGroup fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class SignatoryGroupFields : AbstractHierarchicalObject<SignatoryGroupFields>
		{
			/// <summary>
			/// The content item of type SignatoryGroup that is a target of the extended API.
			/// </summary>
			private readonly SignatoryGroup mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="SignatoryGroupFields" /> class with the specified content item of type SignatoryGroup.
			/// </summary>
			/// <param name="instance">The content item of type SignatoryGroup that is a target of the extended API.</param>
			public SignatoryGroupFields(SignatoryGroup instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// SignatoryGroupID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.SignatoryGroupID;
				}
				set
				{
					mInstance.SignatoryGroupID = value;
				}
			}


			/// <summary>
			/// Signatory Group Name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.SignatoryGroupName;
				}
				set
				{
					mInstance.SignatoryGroupName = value;
				}
			}


			/// <summary>
			/// Signatory Persons.
			/// </summary>
			public string SignatoryPersons
			{
				get
				{
					return mInstance.SignatoryPersons;
				}
				set
				{
					mInstance.SignatoryPersons = value;
				}
			}


			/// <summary>
			/// Signature Rights.
			/// </summary>
			public string SignatureRights
			{
				get
				{
					return mInstance.SignatureRights;
				}
				set
				{
					mInstance.SignatureRights = value;
				}
			}


			/// <summary>
			/// Start Date.
			/// </summary>
			public DateTime StartDate
			{
				get
				{
					return mInstance.StartDate;
				}
				set
				{
					mInstance.StartDate = value;
				}
			}


			/// <summary>
			/// End Date.
			/// </summary>
			public DateTime EndDate
			{
				get
				{
					return mInstance.EndDate;
				}
				set
				{
					mInstance.EndDate = value;
				}
			}


			/// <summary>
			/// Is Confirmed.
			/// </summary>
			public bool Status
			{
				get
				{
					return mInstance.Status;
				}
				set
				{
					mInstance.Status = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="SignatoryGroup" /> class.
		/// </summary>
		public SignatoryGroup() : base(CLASS_NAME)
		{
			mFields = new SignatoryGroupFields(this);
		}

		#endregion
	}
}