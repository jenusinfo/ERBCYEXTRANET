//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Eurobank;

[assembly: RegisterDocumentType(NoteDetails.CLASS_NAME, typeof(NoteDetails))]

namespace CMS.DocumentEngine.Types.Eurobank
{
	/// <summary>
	/// Represents a content item of type NoteDetails.
	/// </summary>
	public partial class NoteDetails : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Eurobank.NoteDetails";


		/// <summary>
		/// The instance of the class that provides extended API for working with NoteDetails fields.
		/// </summary>
		private readonly NoteDetailsFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// NoteDetailsID.
		/// </summary>
		[DatabaseIDField]
		public int NoteDetailsID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("NoteDetailsID"), 0);
			}
			set
			{
				SetValue("NoteDetailsID", value);
			}
		}


		/// <summary>
		/// Type.
		/// </summary>
		[DatabaseField]
		public Guid NoteDetails_Type
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("NoteDetails_Type"), Guid.Empty);
			}
			set
			{
				SetValue("NoteDetails_Type", value);
			}
		}


		/// <summary>
		/// Note Details Status.
		/// </summary>
		[DatabaseField]
		public bool NoteDetails_Status
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("NoteDetails_Status"), false);
			}
			set
			{
				SetValue("NoteDetails_Status", value);
			}
		}


		/// <summary>
		/// Subject.
		/// </summary>
		[DatabaseField]
		public string NoteDetails_Subject
		{
			get
			{
				return ValidationHelper.GetString(GetValue("NoteDetails_Subject"), @"");
			}
			set
			{
				SetValue("NoteDetails_Subject", value);
			}
		}


		/// <summary>
		/// Details.
		/// </summary>
		[DatabaseField]
		public string NoteDetails_Details
		{
			get
			{
				return ValidationHelper.GetString(GetValue("NoteDetails_Details"), @"");
			}
			set
			{
				SetValue("NoteDetails_Details", value);
			}
		}


		/// <summary>
		/// Pending on.
		/// </summary>
		[DatabaseField]
		public Guid NoteDetails_PendingOn
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("NoteDetails_PendingOn"), Guid.Empty);
			}
			set
			{
				SetValue("NoteDetails_PendingOn", value);
			}
		}


		/// <summary>
		/// Expected Date.
		/// </summary>
		[DatabaseField]
		public DateTime NoteDetails_ExpectedDate
		{
			get
			{
				return ValidationHelper.GetDateTime(GetValue("NoteDetails_ExpectedDate"), DateTimeHelper.ZERO_TIME);
			}
			set
			{
				SetValue("NoteDetails_ExpectedDate", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with NoteDetails fields.
		/// </summary>
		[RegisterProperty]
		public NoteDetailsFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with NoteDetails fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class NoteDetailsFields : AbstractHierarchicalObject<NoteDetailsFields>
		{
			/// <summary>
			/// The content item of type NoteDetails that is a target of the extended API.
			/// </summary>
			private readonly NoteDetails mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="NoteDetailsFields" /> class with the specified content item of type NoteDetails.
			/// </summary>
			/// <param name="instance">The content item of type NoteDetails that is a target of the extended API.</param>
			public NoteDetailsFields(NoteDetails instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// NoteDetailsID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.NoteDetailsID;
				}
				set
				{
					mInstance.NoteDetailsID = value;
				}
			}


			/// <summary>
			/// Type.
			/// </summary>
			public Guid _Type
			{
				get
				{
					return mInstance.NoteDetails_Type;
				}
				set
				{
					mInstance.NoteDetails_Type = value;
				}
			}


			/// <summary>
			/// Note Details Status.
			/// </summary>
			public bool _Status
			{
				get
				{
					return mInstance.NoteDetails_Status;
				}
				set
				{
					mInstance.NoteDetails_Status = value;
				}
			}


			/// <summary>
			/// Subject.
			/// </summary>
			public string _Subject
			{
				get
				{
					return mInstance.NoteDetails_Subject;
				}
				set
				{
					mInstance.NoteDetails_Subject = value;
				}
			}


			/// <summary>
			/// Details.
			/// </summary>
			public string _Details
			{
				get
				{
					return mInstance.NoteDetails_Details;
				}
				set
				{
					mInstance.NoteDetails_Details = value;
				}
			}


			/// <summary>
			/// Pending on.
			/// </summary>
			public Guid _PendingOn
			{
				get
				{
					return mInstance.NoteDetails_PendingOn;
				}
				set
				{
					mInstance.NoteDetails_PendingOn = value;
				}
			}


			/// <summary>
			/// Expected Date.
			/// </summary>
			public DateTime _ExpectedDate
			{
				get
				{
					return mInstance.NoteDetails_ExpectedDate;
				}
				set
				{
					mInstance.NoteDetails_ExpectedDate = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="NoteDetails" /> class.
		/// </summary>
		public NoteDetails() : base(CLASS_NAME)
		{
			mFields = new NoteDetailsFields(this);
		}

		#endregion
	}
}