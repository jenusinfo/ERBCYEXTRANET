@model Eurobank.Models.Documents.DocumentsViewModel
@using Kendo.Mvc.UI
@{
    int appID = 0;
    if (ViewBag.ApplicationId != null)
    {
        appID = Convert.ToInt32(ViewBag.ApplicationId);
    }
    string applicationNumber = string.Empty;
    if (ViewBag.ApplicationNumber != null)
    {
        applicationNumber = Convert.ToString(ViewBag.ApplicationNumber);
    }
}


<div class="form-group">
    @Html.HiddenFor(m => m.FileName)
    <label asp-for="Entity" class="control-label"></label>
    @*@(Html.Kendo().DropDownListFor(m => m.Entity)
                .OptionLabel("- Select - ")
            .DataTextField("Text")
            .DataValueField("Text")
            .HtmlAttributes(new { @class = "form-control" })

            .DataSource(source => {
                source.Read(read =>
                {
                    read.Action("LegalEntity_Read", "Applications");
                });
            })
        )*@
    @(Html.Kendo().DropDownListFor(m => m.Entity).BindTo((System.Collections.IEnumerable)ViewBag.DocumentsEntityName)
.OptionLabel(ResHelper.GetString("Eurobank.General.DropDownList.Select"))
.DataValueField("Value")
.DataTextField("Text").HtmlAttributes(new { @class = "form-control",@onchange="SelectEntityType()" }))
    @Html.ValidationMessageFor(X => X.Entity)
</div>
<div class="form-group">
    <label asp-for="EntityType" class="control-label"></label>
    @(Html.Kendo().DropDownListFor(m => m.EntityRole1).BindTo((System.Collections.IEnumerable)ViewBag.DocumentEntityType)
.OptionLabel(ResHelper.GetString("Eurobank.General.DropDownList.Select"))
.DataValueField("Value")
.DataTextField("Text").HtmlAttributes(new { @class = "form-control" }))
    @Html.ValidationMessageFor(X => X.EntityType)
</div>
@*<div class="form-group">
        <label asp-for="EntityType" class="control-label"></label>
        @(Html.Kendo().DropDownListFor(m => m.EntityType)
                .OptionLabel("- Select - ")
            .DataTextField("Text")
            .DataValueField("Value")
            .HtmlAttributes(new { @class = "form-control" })

            .DataSource(source => {
                source.Read(read =>
                {
                    read.Action("CorporateAccount_Read", "Applications");
                });
            }))
        @Html.ValidationMessageFor(X => X.EntityType)
    </div>*@
<div class="form-group">
    <label asp-for="DocumentType" class="control-label"></label>
    @(Html.Kendo().DropDownListFor(m => m.DocumentType)
			.OptionLabel("- Select - ")
		.DataTextField("Text")
		.DataValueField("Value")
		.HtmlAttributes(new { @class = "form-control" })

		.DataSource(source => {
			source.Read(read =>
			{
				read.Action("LegalBankDocumentType_Read", "Applications");
			});
		}))
    @Html.ValidationMessageFor(X => X.DocumentType)
</div>
<div class="form-group">
    <label asp-for="RequiresSignature" class="control-label"></label>
    @(Html.Kendo().DropDownListFor(m => m.RequiresSignature)
			.OptionLabel("- Select - ")
		.DataTextField("Text")
		.DataValueField("Value")
		.HtmlAttributes(new { @class = "form-control" })

		.DataSource(source => {
			source.Read(read =>
			{
				read.Action("RequiresSignature_Read", "Applications");
			});
		}))
    @Html.ValidationMessageFor(X => X.RequiresSignature)
</div>
<div class="form-group">
    <div id="FileUplaodDIV">
        @(Html.Kendo().Upload()
				.Name("files")
				.Async(a => a
					.Save("Documents_Save", "CommonForm", new { applicationNumber = applicationNumber })
					.Remove("Remove", "CommonForm")
					.AutoUpload(false)
				)
				.Events(events => events
				.Success("onBankFileSuccess")
			)
				.DropZone(".dropZoneElement")
			//.Validation(validation =>
			//{
			//    validation.AllowedExtensions(Model.AllowedExtensions);
			//    if (@Model.IsLimited)
			//    {
			//        validation.MaxFileSize(3145728);
			//    }
			//})
            )
        @Html.ValidationMessageFor(X => X.Consent)
    </div>

    @*@(Html.Kendo().Upload()
                .Name("files")
                .HtmlAttributes(new { aria_label = "files", @style = "width:300px;" })
                    //.Validation(validation =>
                    //{
                    //	validation.AllowedExtensions(new string[] { ".jpg", ".jpeg", ".png", ".bmp", ".gif" });
                    //	validation.MaxFileSize(500000);
                    //})


                .Messages(m => m.Select("Select Image"))
                .Multiple(false)

                                 .Async(a => a
                     .Save("Documents_Save", "CommonForm")
                     .Remove("Remove", "CommonForm")
                     .AutoUpload(true)

            )


        //.Upload("onUpload")
        )*@
    <div id="prevUploadBankDoc">
        @*<input type="button" id="btnShowBankFile" value="OpenFile" />*@
        <button type="button" id="btnShowBankFile">
            <i class="fa fa-info-circle" aria-hidden="true"></i> Open
        </button>
    </div>

    <div id="showBankDocBlockLegal" style="display:none">
        @(Html.Kendo().Window()
    .Name("BankDocWindow")
    .Title("Bank Document")
	.Visible(false)
    .Content(@<text>
            <div id="bankDocPdfViewer">
				<div class="mod" id="documentModal">
	<div class="m-dialog">
		<div class="m-content">
			<div class="m-header">
				<h5 class="m-title" id="documentModalLabel"></h5>
				<a href="" download id="documentDownload" class="ms-auto">
					Download
				</a>
			</div>
            <div class="m-body">
				<div class="row">
					<div class="col-4">
						<div id="divComment" class="download-PDF"></div>
					</div>
					<div class="col-8" id="pdfDocumets">
						<embed id="embBankDocument" src="" width="100%" height="500" alt="pdf" pluginspage="http://www.adobe.com/products/acrobat/readstep2.html">
					</div>
					<div class="col-8" id="othersDocumets" style="display:none" >
						<div class="info-box info-bg2 bghover">
							<h3 class="box-titl">No Preview Avaliable </h3>
							<div class="box-botm">
								<a href="" download  id="documentDownloadOthers" class="box-action" >Download</a>
							</div>

						</div>
					</div>
				</div>


            </div>
		</div>
	</div>
</div>
			</div>
    </text>)
)

    </div>

</div>
<div class="form-group">

    @Html.Kendo().CheckBoxFor(model => model.Consent)

</div>
<script>
    $('#btnShowBankFile').click(function () {
        var popup = $("#BankDocWindow").data('kendoWindow');
        popup.open();
    });

    function SelectEntityType() {
        var personNodeGUID = $("#Entity").data("kendoDropDownList").value();
        	 $.ajax({
				url: '@Url.Action("GetEntityTypeByPersonGUID", "Applications")',
				cache: false,
				type: "POST",
                 data: { personNodeGUID: personNodeGUID},
                 success: function (result) {
                     var entityType = $("#EntityRole1").data("kendoDropDownList");
                     entityType.text(result);
                     entityType.trigger("change");
                 }

		     });
    }

    $(document).ready(function() {
        $('#Entity').trigger('change');
        if ($("#IsBankDocAttachmentAllowed").val() == "True") {
            $("#FileUplaodDIV").css("display", "block");
        }
        else {
            $("#FileUplaodDIV").css("display", "none");
        }
    });
</script>


