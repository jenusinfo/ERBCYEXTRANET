//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Eurobank;

[assembly: RegisterDocumentType(PersonsRegistryUser.CLASS_NAME, typeof(PersonsRegistryUser))]

namespace CMS.DocumentEngine.Types.Eurobank
{
	/// <summary>
	/// Represents a content item of type PersonsRegistryUser.
	/// </summary>
	public partial class PersonsRegistryUser : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Eurobank.PersonsRegistryUser";


		/// <summary>
		/// The instance of the class that provides extended API for working with PersonsRegistryUser fields.
		/// </summary>
		private readonly PersonsRegistryUserFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// PersonsRegistryUserID.
		/// </summary>
		[DatabaseIDField]
		public int PersonsRegistryUserID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("PersonsRegistryUserID"), 0);
			}
			set
			{
				SetValue("PersonsRegistryUserID", value);
			}
		}


		/// <summary>
		/// User Name.
		/// </summary>
		[DatabaseField]
		public string UserName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("UserName"), @"");
			}
			set
			{
				SetValue("UserName", value);
			}
		}


		/// <summary>
		/// User ID.
		/// </summary>
		[DatabaseField]
		public string UserID
		{
			get
			{
				return ValidationHelper.GetString(GetValue("UserID"), @"");
			}
			set
			{
				SetValue("UserID", value);
			}
		}


		/// <summary>
		/// User Type.
		/// </summary>
		[DatabaseField]
		public string UserType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("UserType"), @"");
			}
			set
			{
				SetValue("UserType", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with PersonsRegistryUser fields.
		/// </summary>
		[RegisterProperty]
		public PersonsRegistryUserFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with PersonsRegistryUser fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class PersonsRegistryUserFields : AbstractHierarchicalObject<PersonsRegistryUserFields>
		{
			/// <summary>
			/// The content item of type PersonsRegistryUser that is a target of the extended API.
			/// </summary>
			private readonly PersonsRegistryUser mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="PersonsRegistryUserFields" /> class with the specified content item of type PersonsRegistryUser.
			/// </summary>
			/// <param name="instance">The content item of type PersonsRegistryUser that is a target of the extended API.</param>
			public PersonsRegistryUserFields(PersonsRegistryUser instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// PersonsRegistryUserID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.PersonsRegistryUserID;
				}
				set
				{
					mInstance.PersonsRegistryUserID = value;
				}
			}


			/// <summary>
			/// User Name.
			/// </summary>
			public string UserName
			{
				get
				{
					return mInstance.UserName;
				}
				set
				{
					mInstance.UserName = value;
				}
			}


			/// <summary>
			/// User ID.
			/// </summary>
			public string UserID
			{
				get
				{
					return mInstance.UserID;
				}
				set
				{
					mInstance.UserID = value;
				}
			}


			/// <summary>
			/// User Type.
			/// </summary>
			public string UserType
			{
				get
				{
					return mInstance.UserType;
				}
				set
				{
					mInstance.UserType = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="PersonsRegistryUser" /> class.
		/// </summary>
		public PersonsRegistryUser() : base(CLASS_NAME)
		{
			mFields = new PersonsRegistryUserFields(this);
		}

		#endregion
	}
}