using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Eurobank.Models.XMLServiceModel
{
	public class Test
	{
	}
}

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using CodeBeautify;
//
//    var welcome8 = Welcome8.FromJson(jsonString);

namespace CodeBeautify
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Welcome8
    {
        [JsonProperty("root")]
        public Root Root { get; set; }
    }

    public partial class Root
    {
        [JsonProperty("application")]
        public Application Application { get; set; }

        [JsonProperty("applicants")]
        public Applicants Applicants { get; set; }

        [JsonProperty("accountdetails")]
        public Accountdetails Accountdetails { get; set; }

        [JsonProperty("carddetails")]
        public Carddetails Carddetails { get; set; }

        [JsonProperty("ebankingdetails")]
        public Ebankingdetails Ebankingdetails { get; set; }

        [JsonProperty("signaturemandates")]
        public Signaturemandates Signaturemandates { get; set; }

        [JsonProperty("relatedparties")]
        public Relatedparties Relatedparties { get; set; }

        [JsonProperty("bankexpecteddocs")]
        public Bankexpecteddocs Bankexpecteddocs { get; set; }
    }

    public partial class Accountdetails
    {
        [JsonProperty("account")]
        public Account[] Account { get; set; }
    }

    public partial class Account
    {
        [JsonProperty("accounttype")]
        public string Accounttype { get; set; }

        [JsonProperty("currency")]
        public string Currency { get; set; }

        [JsonProperty("statementoffrequence")]
        public string Statementoffrequence { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class Applicants
    {
        [JsonProperty("applicant")]
        public Applicant Applicant { get; set; }
    }

    public partial class Applicant
    {
        [JsonProperty("customercheck")]
        public Customercheck Customercheck { get; set; }

        [JsonProperty("personal")]
        public Personal Personal { get; set; }

        [JsonProperty("identifications")]
        public Identifications Identifications { get; set; }

        [JsonProperty("addresses")]
        public Addresses Addresses { get; set; }

        [JsonProperty("contactdetails")]
        public Contactdetails Contactdetails { get; set; }

        [JsonProperty("taxresidencies")]
        public Taxresidencies Taxresidencies { get; set; }

        [JsonProperty("businessprofile")]
        public ApplicantBusinessprofile Businessprofile { get; set; }

        [JsonProperty("pepdetails")]
        public Pepdetails Pepdetails { get; set; }

        [JsonProperty("bankrelationship")]
        public Bankrelationship Bankrelationship { get; set; }

        [JsonProperty("consents")]
        public Consents Consents { get; set; }
    }

    public partial class Addresses
    {
        [JsonProperty("address")]
        public Address[] Address { get; set; }
    }

    public partial class Address
    {
        [JsonProperty("addresstype")]
        public string Addresstype { get; set; }

        [JsonProperty("addressline1")]
        public string Addressline1 { get; set; }

        [JsonProperty("addressline2")]
        public string Addressline2 { get; set; }

        [JsonProperty("postalcode")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Postalcode { get; set; }

        [JsonProperty("pobox")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Pobox { get; set; }

        [JsonProperty("city")]
        public string City { get; set; }

        [JsonProperty("country")]
        public string Country { get; set; }

        [JsonProperty("maincorrespondenceaddress", NullValueHandling = NullValueHandling.Ignore)]
        public string Maincorrespondenceaddress { get; set; }
    }

    public partial class Bankrelationship
    {
        [JsonProperty("othereuropeanbankinginstitution")]
        public string Othereuropeanbankinginstitution { get; set; }

        [JsonProperty("nameofeuropeanbankinginstitution")]
        public string Nameofeuropeanbankinginstitution { get; set; }

        [JsonProperty("countryofeuropeanbankinginstitution")]
        public string Countryofeuropeanbankinginstitution { get; set; }
    }

    public partial class ApplicantBusinessprofile
    {
        [JsonProperty("employementdetails")]
        public PurpleEmployementdetails Employementdetails { get; set; }

        [JsonProperty("formeremployer")]
        public Formeremployer Formeremployer { get; set; }

        [JsonProperty("grossannualsalary")]
        public string Grossannualsalary { get; set; }

        [JsonProperty("totalotherincome")]
        public string Totalotherincome { get; set; }

        [JsonProperty("originsofincome")]
        public Originsofincome Originsofincome { get; set; }

        [JsonProperty("originsoftotalassets")]
        public Originsoftotalassets Originsoftotalassets { get; set; }

        [JsonProperty("__text")]
        public string Text { get; set; }
    }

    public partial class PurpleEmployementdetails
    {
        [JsonProperty("employmentstatus")]
        public string Employmentstatus { get; set; }

        [JsonProperty("profession")]
        public string Profession { get; set; }

        [JsonProperty("yearsinbusiness")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Yearsinbusiness { get; set; }

        [JsonProperty("employername")]
        public string Employername { get; set; }

        [JsonProperty("natureofbusiness")]
        public string Natureofbusiness { get; set; }
    }

    public partial class Formeremployer
    {
        [JsonProperty("formeremployername")]
        public string Formeremployername { get; set; }

        [JsonProperty("formernatureofbusiness")]
        public string Formernatureofbusiness { get; set; }

        [JsonProperty("formercountryofemployment")]
        public string Formercountryofemployment { get; set; }

        [JsonProperty("formerprofession")]
        public string Formerprofession { get; set; }
    }

    public partial class Originsofincome
    {
        [JsonProperty("originofincome")]
        public Income[] Originofincome { get; set; }
    }

    public partial class Income
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("originofannualincome")]
        public string Originofannualincome { get; set; }

        [JsonProperty("otheroriginofincome", NullValueHandling = NullValueHandling.Ignore)]
        public string Otheroriginofincome { get; set; }

        [JsonProperty("incomeamount")]
        public string Incomeamount { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("otherdescription", NullValueHandling = NullValueHandling.Ignore)]
        public string Otherdescription { get; set; }
    }

    public partial class Originsoftotalassets
    {
        [JsonProperty("originoftotalassets")]
        public Businessfinancialprofileorigintotalassets[] Originoftotalassets { get; set; }
    }

    public partial class Businessfinancialprofileorigintotalassets
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("originoftotalassets")]
        public string Originoftotalassets { get; set; }

        [JsonProperty("otheroriginoftotalassets", NullValueHandling = NullValueHandling.Ignore)]
        public string Otheroriginoftotalassets { get; set; }

        [JsonProperty("amountoftotalassets")]
        public string Amountoftotalassets { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("otherdescription", NullValueHandling = NullValueHandling.Ignore)]
        public string Otherdescription { get; set; }
    }

    public partial class Consents
    {
        [JsonProperty("consentforprofilingformarketingpurposes")]
        public string Consentforprofilingformarketingpurposes { get; set; }
    }

    public partial class Contactdetails
    {
        [JsonProperty("countrycodemobile")]
        public string Countrycodemobile { get; set; }

        [JsonProperty("mobilenumber")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Mobilenumber { get; set; }

        [JsonProperty("countrycodehome")]
        public string Countrycodehome { get; set; }

        [JsonProperty("homenumber")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Homenumber { get; set; }

        [JsonProperty("countrycodework")]
        public string Countrycodework { get; set; }

        [JsonProperty("worknumber")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Worknumber { get; set; }

        [JsonProperty("countrycodefax")]
        public string Countrycodefax { get; set; }

        [JsonProperty("faxnumber")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Faxnumber { get; set; }

        [JsonProperty("emailaddress")]
        public string Emailaddress { get; set; }

        [JsonProperty("correspondencelanguage", NullValueHandling = NullValueHandling.Ignore)]
        public string Correspondencelanguage { get; set; }
    }

    public partial class Customercheck
    {
        [JsonProperty("customerexists")]
        public string Customerexists { get; set; }

        [JsonProperty("customercode")]
        public string Customercode { get; set; }
    }

    public partial class Identifications
    {
        [JsonProperty("identification")]
        public Identification[] Identification { get; set; }
    }

    public partial class Identification
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("citizenship")]
        public string Citizenship { get; set; }

        [JsonProperty("typeofidentification")]
        public string Typeofidentification { get; set; }

        [JsonProperty("identificationnumber")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Identificationnumber { get; set; }

        [JsonProperty("issuingcountry")]
        public string Issuingcountry { get; set; }

        [JsonProperty("issuedate")]
        public DateTimeOffset Issuedate { get; set; }

        [JsonProperty("expirydate")]
        public DateTimeOffset Expirydate { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class Pepdetails
    {
        [JsonProperty("isapplicantapep")]
        public string Isapplicantapep { get; set; }

        [JsonProperty("pepapplicant")]
        public Pepa Pepapplicant { get; set; }

        [JsonProperty("isfamilymemberassociatepepe")]
        public string Isfamilymemberassociatepepe { get; set; }

        [JsonProperty("pepassociate")]
        public Pepa Pepassociate { get; set; }
    }

    public partial class Pepa
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("nameofpep")]
        public string Nameofpep { get; set; }

        [JsonProperty("surnameofpep")]
        public string Surnameofpep { get; set; }

        [JsonProperty("positionorganization")]
        public string Positionorganization { get; set; }

        [JsonProperty("country")]
        public string Country { get; set; }

        [JsonProperty("sincewhen")]
        public string Sincewhen { get; set; }

        [JsonProperty("untilwhen")]
        public string Untilwhen { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("relationship", NullValueHandling = NullValueHandling.Ignore)]
        public string Relationship { get; set; }
    }

    public partial class Personal
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("firstname")]
        public string Firstname { get; set; }

        [JsonProperty("lastname")]
        public string Lastname { get; set; }

        [JsonProperty("fathername")]
        public string Fathername { get; set; }

        [JsonProperty("gender")]
        public string Gender { get; set; }

        [JsonProperty("dateofbirth")]
        public DateTimeOffset Dateofbirth { get; set; }

        [JsonProperty("placeofbirth")]
        public string Placeofbirth { get; set; }

        [JsonProperty("countryofbirth")]
        public string Countryofbirth { get; set; }

        [JsonProperty("educationlevel")]
        public string Educationlevel { get; set; }
    }

    public partial class Taxresidencies
    {
        [JsonProperty("taxdresidency")]
        public Taxdresidency[] Taxdresidency { get; set; }
    }

    public partial class Taxdresidency
    {
        [JsonProperty("countryoftaxresidence")]
        public string Countryoftaxresidence { get; set; }

        [JsonProperty("taxidentificationnumber")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Taxidentificationnumber { get; set; }

        [JsonProperty("tinunavailablereason")]
        public string Tinunavailablereason { get; set; }

        [JsonProperty("justificationfortin")]
        public string Justificationfortin { get; set; }

        [JsonProperty("paydefencetax")]
        public string Paydefencetax { get; set; }
    }

    public partial class Application
    {
        [JsonProperty("general")]
        public General General { get; set; }

        [JsonProperty("purposeandactivity")]
        public Purposeandactivity Purposeandactivity { get; set; }
    }

    public partial class General
    {
        [JsonProperty("applicationnumber")]
        public string Applicationnumber { get; set; }

        [JsonProperty("applicationstatus")]
        public string Applicationstatus { get; set; }

        [JsonProperty("introducercif")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Introducercif { get; set; }

        [JsonProperty("introducername")]
        public string Introducername { get; set; }

        [JsonProperty("submittedBy")]
        public string SubmittedBy { get; set; }

        [JsonProperty("submittedOn")]
        public string SubmittedOn { get; set; }

        [JsonProperty("responsibleOfficer")]
        public string ResponsibleOfficer { get; set; }

        [JsonProperty("responsiblebranch")]
        public string Responsiblebranch { get; set; }

        [JsonProperty("applicationtype")]
        public string Applicationtype { get; set; }

        [JsonProperty("applicatonservices")]
        public Applicatonservices Applicatonservices { get; set; }
    }

    public partial class Applicatonservices
    {
        [JsonProperty("applicatonservice")]
        public string[] Applicatonservice { get; set; }
    }

    public partial class Purposeandactivity
    {
        [JsonProperty("reasonsforopeningtheaccount")]
        public Reasonsforopeningtheaccount Reasonsforopeningtheaccount { get; set; }

        [JsonProperty("expectednaturesofincomingandoutgoingtransactions")]
        public Expectednaturesofincomingandoutgoingtransactions Expectednaturesofincomingandoutgoingtransactions { get; set; }

        [JsonProperty("expectedfrequencyofincomingandoutgoingtransactions")]
        public string Expectedfrequencyofincomingandoutgoingtransactions { get; set; }

        [JsonProperty("expectedincomingamount")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Expectedincomingamount { get; set; }

        [JsonProperty("sourcesofincomingtxns")]
        public Sourcesofincomingtxns Sourcesofincomingtxns { get; set; }

        [JsonProperty("sourcesofoutgoingtxns")]
        public Sourcesofoutgoingtxns Sourcesofoutgoingtxns { get; set; }
    }

    public partial class Expectednaturesofincomingandoutgoingtransactions
    {
        [JsonProperty("expectednatureofincomingandoutgoingtransactions")]
        public string[] Expectednatureofincomingandoutgoingtransactions { get; set; }
    }

    public partial class Reasonsforopeningtheaccount
    {
        [JsonProperty("reasonforopeningtheaccount")]
        public string[] Reasonforopeningtheaccount { get; set; }
    }

    public partial class Sourcesofincomingtxns
    {
        [JsonProperty("sourceofincomingtxns")]
        public Sourceofincomingtxn[] Sourceofincomingtxns { get; set; }
    }

    public partial class Sourceofincomingtxn
    {
        [JsonProperty("nameofremitter")]
        public string Nameofremitter { get; set; }

        [JsonProperty("countryofremmiter")]
        public string Countryofremmiter { get; set; }

        [JsonProperty("countryofremmiterbank")]
        public string Countryofremmiterbank { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class Sourcesofoutgoingtxns
    {
        [JsonProperty("sourceofoutgoingtxns")]
        public Sourceofoutgoingtxn[] Sourceofoutgoingtxns { get; set; }
    }

    public partial class Sourceofoutgoingtxn
    {
        [JsonProperty("nameofbeneficiary")]
        public string Nameofbeneficiary { get; set; }

        [JsonProperty("countryofbeneficiary")]
        public string Countryofbeneficiary { get; set; }

        [JsonProperty("countryofbeneficiarybank")]
        public string Countryofbeneficiarybank { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class Bankexpecteddocs
    {
        [JsonProperty("bankexpecteddoc")]
        public Bankexpecteddoc[] Bankexpecteddoc { get; set; }
    }

    public partial class Bankexpecteddoc
    {
        [JsonProperty("entitytypename")]
        public string Entitytypename { get; set; }

        [JsonProperty("entitytype")]
        public string Entitytype { get; set; }

        [JsonProperty("entityrole")]
        public string Entityrole { get; set; }

        [JsonProperty("documenttype")]
        public string Documenttype { get; set; }

        [JsonProperty("expecteddoccode", NullValueHandling = NullValueHandling.Ignore)]
        public string Expecteddoccode { get; set; }

        [JsonProperty("expecteddocprovided", NullValueHandling = NullValueHandling.Ignore)]
        public string Expecteddocprovided { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("requiressignature", NullValueHandling = NullValueHandling.Ignore)]
        public string Requiressignature { get; set; }

        [JsonProperty("uploadedon", NullValueHandling = NullValueHandling.Ignore)]
        public string Uploadedon { get; set; }

        [JsonProperty("uploadedby", NullValueHandling = NullValueHandling.Ignore)]
        public string Uploadedby { get; set; }
    }

    public partial class Carddetails
    {
        [JsonProperty("card")]
        public Card[] Card { get; set; }
    }

    public partial class Card
    {
        [JsonProperty("visadebitcard")]
        public string Visadebitcard { get; set; }

        [JsonProperty("associatedaccount")]
        public string Associatedaccount { get; set; }

        [JsonProperty("associatedaccountccy")]
        public string Associatedaccountccy { get; set; }

        [JsonProperty("associatedcardholder")]
        public string Associatedcardholder { get; set; }

        [JsonProperty("fullnameoncard")]
        public string Fullnameoncard { get; set; }

        [JsonProperty("mobileforalertscountry")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Mobileforalertscountry { get; set; }

        [JsonProperty("mobileforalertsphone")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Mobileforalertsphone { get; set; }

        [JsonProperty("dispatchmethodofthecard")]
        public string Dispatchmethodofthecard { get; set; }

        [JsonProperty("deliveryaddress")]
        public string Deliveryaddress { get; set; }

        [JsonProperty("collectedbyname")]
        public string Collectedbyname { get; set; }

        [JsonProperty("collectedbyid")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Collectedbyid { get; set; }

        [JsonProperty("deliveryDetails")]
        public string DeliveryDetails { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class Ebankingdetails
    {
        [JsonProperty("subscriber")]
        public Subscriber[] Subscriber { get; set; }
    }

    public partial class Subscriber
    {
        [JsonProperty("subscribername")]
        public string Subscribername { get; set; }

        [JsonProperty("accesslevel")]
        public string Accesslevel { get; set; }

        [JsonProperty("accesstoallpersonalaccounts")]
        public string Accesstoallpersonalaccounts { get; set; }

        [JsonProperty("automaticallyaddfuturepersonalaccounts")]
        public string Automaticallyaddfuturepersonalaccounts { get; set; }

        [JsonProperty("receiveestatements", NullValueHandling = NullValueHandling.Ignore)]
        public string Receiveestatements { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class Relatedparties
    {
        [JsonProperty("relatedparty")]
        public Relatedparty[] Relatedparty { get; set; }
    }

    public partial class Relatedparty
    {
        [JsonProperty("customercheck")]
        public Customercheck Customercheck { get; set; }

        [JsonProperty("personal")]
        public Personal Personal { get; set; }

        [JsonProperty("identifications")]
        public Identifications Identifications { get; set; }

        [JsonProperty("addresses")]
        public Addresses Addresses { get; set; }

        [JsonProperty("contactdetails")]
        public Contactdetails Contactdetails { get; set; }

        [JsonProperty("businessprofile")]
        public RelatedpartyBusinessprofile Businessprofile { get; set; }

        [JsonProperty("businessfinancialprofileoriginannualincome")]
        public Income Businessfinancialprofileoriginannualincome { get; set; }

        [JsonProperty("businessfinancialprofileorigintotalassets")]
        public Businessfinancialprofileorigintotalassets Businessfinancialprofileorigintotalassets { get; set; }

        [JsonProperty("pepdetailsapplicants")]
        public Pepdetailsapplicants Pepdetailsapplicants { get; set; }

        [JsonProperty("pepdetailsfamilymembersassociates")]
        public Pepdetailsfamilymembersassociates Pepdetailsfamilymembersassociates { get; set; }

        [JsonProperty("roles")]
        public Roles Roles { get; set; }
    }

    public partial class RelatedpartyBusinessprofile
    {
        [JsonProperty("employementdetails")]
        public FluffyEmployementdetails Employementdetails { get; set; }
    }

    public partial class FluffyEmployementdetails
    {
        [JsonProperty("employmentstatus", NullValueHandling = NullValueHandling.Ignore)]
        public string Employmentstatus { get; set; }

        [JsonProperty("profession")]
        public string Profession { get; set; }

        [JsonProperty("employername")]
        public string Employername { get; set; }
    }

    public partial class Pepdetailsapplicants
    {
        [JsonProperty("pepapplicant")]
        public Pep[] Pepapplicant { get; set; }
    }

    public partial class Pep
    {
        [JsonProperty("isapplicantapep", NullValueHandling = NullValueHandling.Ignore)]
        public string Isapplicantapep { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("surname")]
        public string Surname { get; set; }

        [JsonProperty("positionorganization")]
        public string Positionorganization { get; set; }

        [JsonProperty("country")]
        public string Country { get; set; }

        [JsonProperty("sincewhen")]
        public string Sincewhen { get; set; }

        [JsonProperty("untilwhen")]
        public string Untilwhen { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("isfamilymemberassociatepepe", NullValueHandling = NullValueHandling.Ignore)]
        public string Isfamilymemberassociatepepe { get; set; }

        [JsonProperty("relationship", NullValueHandling = NullValueHandling.Ignore)]
        public string Relationship { get; set; }
    }

    public partial class Pepdetailsfamilymembersassociates
    {
        [JsonProperty("pepfamilyassociate")]
        public Pep[] Pepfamilyassociate { get; set; }
    }

    public partial class Roles
    {
        [JsonProperty("role")]
        public string[] Role { get; set; }
    }

    public partial class Signaturemandates
    {
        [JsonProperty("signatoryrights")]
        public string Signatoryrights { get; set; }

        [JsonProperty("signaturemandate")]
        public Signaturemandate Signaturemandate { get; set; }
    }

    public partial class Signaturemandate
    {
        [JsonProperty("signatorypersons")]
        public Signatorypersons Signatorypersons { get; set; }

        [JsonProperty("signatoryrights")]
        public string Signatoryrights { get; set; }

        [JsonProperty("totalsignatures")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Totalsignatures { get; set; }

        [JsonProperty("limitfrom")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Limitfrom { get; set; }

        [JsonProperty("limitto")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Limitto { get; set; }

        [JsonProperty("status")]
        public string Status { get; set; }
    }

    public partial class Signatorypersons
    {
        [JsonProperty("signatoryperson")]
        public string Signatoryperson { get; set; }
    }

    public partial class Welcome8
    {
        public static Welcome8 FromJson(string json) => JsonConvert.DeserializeObject<Welcome8>(json, CodeBeautify.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Welcome8 self) => JsonConvert.SerializeObject(self, CodeBeautify.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if(reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if(Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if(untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }
}

