//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Eurobank;

[assembly: RegisterDocumentType(FATCADetails.CLASS_NAME, typeof(FATCADetails))]

namespace CMS.DocumentEngine.Types.Eurobank
{
	/// <summary>
	/// Represents a content item of type FATCADetails.
	/// </summary>
	public partial class FATCADetails : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Eurobank.FATCADetails";


		/// <summary>
		/// The instance of the class that provides extended API for working with FATCADetails fields.
		/// </summary>
		private readonly FATCADetailsFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// FATCADetailsID.
		/// </summary>
		[DatabaseIDField]
		public int FATCADetailsID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("FATCADetailsID"), 0);
			}
			set
			{
				SetValue("FATCADetailsID", value);
			}
		}


		/// <summary>
		/// FATCA Classification.
		/// </summary>
		[DatabaseField]
		public string FATCADetails_FATCAClassification
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FATCADetails_FATCAClassification"), @"");
			}
			set
			{
				SetValue("FATCADetails_FATCAClassification", value);
			}
		}


		/// <summary>
		/// US Entity Type.
		/// </summary>
		[DatabaseField]
		public string FATCADetails_USEtityType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FATCADetails_USEtityType"), @"");
			}
			set
			{
				SetValue("FATCADetails_USEtityType", value);
			}
		}


		/// <summary>
		/// Type of Foreign Financial Institution.
		/// </summary>
		[DatabaseField]
		public string FATCADetails_TypeofForeignFinancialInstitution
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FATCADetails_TypeofForeignFinancialInstitution"), @"");
			}
			set
			{
				SetValue("FATCADetails_TypeofForeignFinancialInstitution", value);
			}
		}


		/// <summary>
		/// Type of Non Financial Foreign Entity(NFFE).
		/// </summary>
		[DatabaseField]
		public string FATCADetails_TypeofNonFinancialForeignEntity
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FATCADetails_TypeofNonFinancialForeignEntity"), @"");
			}
			set
			{
				SetValue("FATCADetails_TypeofNonFinancialForeignEntity", value);
			}
		}


		/// <summary>
		/// Global Intermediary Identification Number.
		/// </summary>
		[DatabaseField]
		public string FATCADetails_GlobalIntermediaryIdentificationNumber
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FATCADetails_GlobalIntermediaryIdentificationNumber"), @"");
			}
			set
			{
				SetValue("FATCADetails_GlobalIntermediaryIdentificationNumber", value);
			}
		}


		/// <summary>
		/// Exemption Reason.
		/// </summary>
		[DatabaseField]
		public string ExemptionReason
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ExemptionReason"), @"");
			}
			set
			{
				SetValue("ExemptionReason", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with FATCADetails fields.
		/// </summary>
		[RegisterProperty]
		public FATCADetailsFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with FATCADetails fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class FATCADetailsFields : AbstractHierarchicalObject<FATCADetailsFields>
		{
			/// <summary>
			/// The content item of type FATCADetails that is a target of the extended API.
			/// </summary>
			private readonly FATCADetails mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="FATCADetailsFields" /> class with the specified content item of type FATCADetails.
			/// </summary>
			/// <param name="instance">The content item of type FATCADetails that is a target of the extended API.</param>
			public FATCADetailsFields(FATCADetails instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// FATCADetailsID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.FATCADetailsID;
				}
				set
				{
					mInstance.FATCADetailsID = value;
				}
			}


			/// <summary>
			/// FATCA Classification.
			/// </summary>
			public string _FATCAClassification
			{
				get
				{
					return mInstance.FATCADetails_FATCAClassification;
				}
				set
				{
					mInstance.FATCADetails_FATCAClassification = value;
				}
			}


			/// <summary>
			/// US Entity Type.
			/// </summary>
			public string _USEtityType
			{
				get
				{
					return mInstance.FATCADetails_USEtityType;
				}
				set
				{
					mInstance.FATCADetails_USEtityType = value;
				}
			}


			/// <summary>
			/// Type of Foreign Financial Institution.
			/// </summary>
			public string _TypeofForeignFinancialInstitution
			{
				get
				{
					return mInstance.FATCADetails_TypeofForeignFinancialInstitution;
				}
				set
				{
					mInstance.FATCADetails_TypeofForeignFinancialInstitution = value;
				}
			}


			/// <summary>
			/// Type of Non Financial Foreign Entity(NFFE).
			/// </summary>
			public string _TypeofNonFinancialForeignEntity
			{
				get
				{
					return mInstance.FATCADetails_TypeofNonFinancialForeignEntity;
				}
				set
				{
					mInstance.FATCADetails_TypeofNonFinancialForeignEntity = value;
				}
			}


			/// <summary>
			/// Global Intermediary Identification Number.
			/// </summary>
			public string _GlobalIntermediaryIdentificationNumber
			{
				get
				{
					return mInstance.FATCADetails_GlobalIntermediaryIdentificationNumber;
				}
				set
				{
					mInstance.FATCADetails_GlobalIntermediaryIdentificationNumber = value;
				}
			}


			/// <summary>
			/// Exemption Reason.
			/// </summary>
			public string ExemptionReason
			{
				get
				{
					return mInstance.ExemptionReason;
				}
				set
				{
					mInstance.ExemptionReason = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="FATCADetails" /> class.
		/// </summary>
		public FATCADetails() : base(CLASS_NAME)
		{
			mFields = new FATCADetailsFields(this);
		}

		#endregion
	}
}