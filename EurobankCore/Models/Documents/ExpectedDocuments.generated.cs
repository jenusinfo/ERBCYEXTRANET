//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Eurobank;

[assembly: RegisterDocumentType(ExpectedDocuments.CLASS_NAME, typeof(ExpectedDocuments))]

namespace CMS.DocumentEngine.Types.Eurobank
{
	/// <summary>
	/// Represents a content item of type ExpectedDocuments.
	/// </summary>
	public partial class ExpectedDocuments : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "Eurobank.ExpectedDocuments";


		/// <summary>
		/// The instance of the class that provides extended API for working with ExpectedDocuments fields.
		/// </summary>
		private readonly ExpectedDocumentsFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// ExpectedDocumentsID.
		/// </summary>
		[DatabaseIDField]
		public int ExpectedDocumentsID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ExpectedDocumentsID"), 0);
			}
			set
			{
				SetValue("ExpectedDocumentsID", value);
			}
		}


		/// <summary>
		/// Entity Name.
		/// </summary>
		[DatabaseField]
		public Guid ExpectedDocuments_Entity
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("ExpectedDocuments_Entity"), Guid.Empty);
			}
			set
			{
				SetValue("ExpectedDocuments_Entity", value);
			}
		}


		/// <summary>
		/// Entity Type.
		/// </summary>
		[DatabaseField]
		public Guid ExpectedDocuments_EntityType
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("ExpectedDocuments_EntityType"), Guid.Empty);
			}
			set
			{
				SetValue("ExpectedDocuments_EntityType", value);
			}
		}


		/// <summary>
		/// Entity Role.
		/// </summary>
		[DatabaseField]
		public Guid ExpectedDocuments_EntityRole
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("ExpectedDocuments_EntityRole"), Guid.Empty);
			}
			set
			{
				SetValue("ExpectedDocuments_EntityRole", value);
			}
		}


		/// <summary>
		/// Document Type.
		/// </summary>
		[DatabaseField]
		public Guid ExpectedDocuments_DocumentType
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("ExpectedDocuments_DocumentType"), Guid.Empty);
			}
			set
			{
				SetValue("ExpectedDocuments_DocumentType", value);
			}
		}


		/// <summary>
		/// Status.
		/// </summary>
		[DatabaseField]
		public bool ExpectedDocuments_Status
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("ExpectedDocuments_Status"), false);
			}
			set
			{
				SetValue("ExpectedDocuments_Status", value);
			}
		}


		/// <summary>
		/// Requires Signature.
		/// </summary>
		[DatabaseField]
		public bool ExpectedDocuments_RequiresSignature
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("ExpectedDocuments_RequiresSignature"), true);
			}
			set
			{
				SetValue("ExpectedDocuments_RequiresSignature", value);
			}
		}


		/// <summary>
		/// File upload.
		/// </summary>
		[DatabaseField]
		public string ExpectedDocuments_FileUpload
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ExpectedDocuments_FileUpload"), @"");
			}
			set
			{
				SetValue("ExpectedDocuments_FileUpload", value);
			}
		}


		/// <summary>
		/// Confirm validity of document and signature where it applies.
		/// </summary>
		[DatabaseField]
		public bool ExpectedDocuments_Consent
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("ExpectedDocuments_Consent"), true);
			}
			set
			{
				SetValue("ExpectedDocuments_Consent", value);
			}
		}


		/// <summary>
		/// FileName.
		/// </summary>
		[DatabaseField]
		public string FileName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FileName"), @"");
			}
			set
			{
				SetValue("FileName", value);
			}
		}


		/// <summary>
		/// External File Guid.
		/// </summary>
		[DatabaseField]
		public string ExternalFileGuid
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ExternalFileGuid"), @"");
			}
			set
			{
				SetValue("ExternalFileGuid", value);
			}
		}


		/// <summary>
		/// Upload File Name.
		/// </summary>
		[DatabaseField]
		public string UploadFileName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("UploadFileName"), @"");
			}
			set
			{
				SetValue("UploadFileName", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with ExpectedDocuments fields.
		/// </summary>
		[RegisterProperty]
		public ExpectedDocumentsFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with ExpectedDocuments fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ExpectedDocumentsFields : AbstractHierarchicalObject<ExpectedDocumentsFields>
		{
			/// <summary>
			/// The content item of type ExpectedDocuments that is a target of the extended API.
			/// </summary>
			private readonly ExpectedDocuments mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ExpectedDocumentsFields" /> class with the specified content item of type ExpectedDocuments.
			/// </summary>
			/// <param name="instance">The content item of type ExpectedDocuments that is a target of the extended API.</param>
			public ExpectedDocumentsFields(ExpectedDocuments instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// ExpectedDocumentsID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ExpectedDocumentsID;
				}
				set
				{
					mInstance.ExpectedDocumentsID = value;
				}
			}


			/// <summary>
			/// Entity Name.
			/// </summary>
			public Guid _Entity
			{
				get
				{
					return mInstance.ExpectedDocuments_Entity;
				}
				set
				{
					mInstance.ExpectedDocuments_Entity = value;
				}
			}


			/// <summary>
			/// Entity Type.
			/// </summary>
			public Guid _EntityType
			{
				get
				{
					return mInstance.ExpectedDocuments_EntityType;
				}
				set
				{
					mInstance.ExpectedDocuments_EntityType = value;
				}
			}


			/// <summary>
			/// Entity Role.
			/// </summary>
			public Guid _EntityRole
			{
				get
				{
					return mInstance.ExpectedDocuments_EntityRole;
				}
				set
				{
					mInstance.ExpectedDocuments_EntityRole = value;
				}
			}


			/// <summary>
			/// Document Type.
			/// </summary>
			public Guid _DocumentType
			{
				get
				{
					return mInstance.ExpectedDocuments_DocumentType;
				}
				set
				{
					mInstance.ExpectedDocuments_DocumentType = value;
				}
			}


			/// <summary>
			/// Status.
			/// </summary>
			public bool _Status
			{
				get
				{
					return mInstance.ExpectedDocuments_Status;
				}
				set
				{
					mInstance.ExpectedDocuments_Status = value;
				}
			}


			/// <summary>
			/// Requires Signature.
			/// </summary>
			public bool _RequiresSignature
			{
				get
				{
					return mInstance.ExpectedDocuments_RequiresSignature;
				}
				set
				{
					mInstance.ExpectedDocuments_RequiresSignature = value;
				}
			}


			/// <summary>
			/// File upload.
			/// </summary>
			public string _FileUpload
			{
				get
				{
					return mInstance.ExpectedDocuments_FileUpload;
				}
				set
				{
					mInstance.ExpectedDocuments_FileUpload = value;
				}
			}


			/// <summary>
			/// Confirm validity of document and signature where it applies.
			/// </summary>
			public bool _Consent
			{
				get
				{
					return mInstance.ExpectedDocuments_Consent;
				}
				set
				{
					mInstance.ExpectedDocuments_Consent = value;
				}
			}


			/// <summary>
			/// FileName.
			/// </summary>
			public string FileName
			{
				get
				{
					return mInstance.FileName;
				}
				set
				{
					mInstance.FileName = value;
				}
			}


			/// <summary>
			/// External File Guid.
			/// </summary>
			public string ExternalFileGuid
			{
				get
				{
					return mInstance.ExternalFileGuid;
				}
				set
				{
					mInstance.ExternalFileGuid = value;
				}
			}


			/// <summary>
			/// Upload File Name.
			/// </summary>
			public string UploadFileName
			{
				get
				{
					return mInstance.UploadFileName;
				}
				set
				{
					mInstance.UploadFileName = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="ExpectedDocuments" /> class.
		/// </summary>
		public ExpectedDocuments() : base(CLASS_NAME)
		{
			mFields = new ExpectedDocumentsFields(this);
		}

		#endregion
	}
}